/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default     Euler;
}

gradSchemes
{
    default Gauss linear;
}

divSchemes
{
    default                         Gauss linear;

    "div\(phi,alpha.*\)"            Gauss SuperBee;
    "div\(phir,alpha.*\)"           Gauss SuperBee;

    "div\(alphaRhoPhi.*,U.*\)"      Gauss SuperBeeV;
    "div\(phi.*,U.*\)"              Gauss SuperBeeV;
    "div\(phi.*,alphaP2Mean.*\)"    Gauss SuperBee;

    "div\(alphaRhoPhi.*,(h|e).*\)"  Gauss SuperBee;
    "div\(alphaRhoPhi.*,K.*\)"      Gauss SuperBee;
    "div\(alphaPhi.*,p\)"           Gauss SuperBee;

    div(alphaRhoPhi.particles,Theta.particles) Gauss SuperBee;

    "div\(alphaRhoPhi.*,(k|epsilon).*\)" Gauss SuperBee;

    div((((alpha.air*thermo:rho.air)*nuEff.air)*dev2(T(grad(U.air))))) Gauss linear;

    div((((thermo:rho.particles*nut.particles)*dev2(T(grad(U.particles))))+(((thermo:rho.particles*lambda.particles)*div(phi.particles))*I)))  Gauss linear;
}

laplacianSchemes
{
    default     Gauss linear uncorrected;
    bounded     Gauss linear uncorrected;
}

interpolationSchemes
{
    default     linear;
}

snGradSchemes
{
    default     uncorrected;
    bounded     uncorrected;
}

fluxRequired
{
    default     no;
    p           ;
    alpha.particles;
}

wallDist
{
    method      meshWave;
}


// ************************************************************************* //
